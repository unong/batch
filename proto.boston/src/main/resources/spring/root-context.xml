<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           				http://www.springframework.org/schema/context
           				http://www.springframework.org/schema/context/spring-context-3.0.xsd
           				http://www.springframework.org/schema/tx
	       				http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           				http://www.springframework.org/schema/mvc
           				http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           				http://www.springframework.org/schema/batch
           				http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">
	
	<!-- Set up or detect a System property called "ENVIRONMENT" used to construct a properties file on the classpath.  The default is "hsql".  -->
	<bean id="environment"
		class="org.springframework.batch.support.SystemPropertyInitializer">
		<property name="defaultValue" value="proto"/>
		<property name="keyName" value="ENVIRONMENT"/>
	</bean>

	<!--  Use this to set additional properties on beans at run time -->
	<bean id="overrideProperties" class="com.unong.proto.boston.sample.PropertyOverrideConfigurerChecker"
		depends-on="environment">
		<property name="location" value="classpath:spring/${ENVIRONMENT}.properties" />
		<!-- Allow system properties (-D) to override those from file -->
		<property name="localOverride" value="true" />
		<property name="properties">
			<bean class="java.lang.System" factory-method="getProperties" />
		</property>
		<property name="ignoreInvalidKeys" value="true" />
		<property name="order" value="2" />
	</bean>
	
	<bean id="placeholderProperties" class="com.unong.proto.boston.sample.PropertyPlaceholderConfigurerChecker"
		depends-on="environment">
		<property name="location" value="classpath:spring/${ENVIRONMENT}.properties" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
	</bean>
	
	<context:component-scan base-package="com.unong.proto.boston" />
	
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry"/>
	</bean>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
		p:dataSource-ref="dataSource" p:transactionManager-ref="transactionManager" p:lobHandler-ref="lobHandler"/>
<!-- 
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"
		lazy-init="true" autowire-candidate="true" />
-->
	<bean id="jobOperator"
		class="org.springframework.batch.core.launch.support.SimpleJobOperator"
		p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
		p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry" />

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
		p:dataSource-ref="dataSource" />

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>